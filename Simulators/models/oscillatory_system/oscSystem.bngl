# Oscillatory system driven by negative feedback with explicit time
# delay arrising from protein synthesis and nuclear shuttling.  To switch
# between different representations of the system, simply scroll down to the 
# reaction rules declaration, and comment or uncomment the desired rules
# to activate or deactivate them.  Currently, the Boolean function is
# the approximation used.
#
# Note, that for more sophisticated models, you can include a parameter that
# controls which approximation is called.  Simply create parameters named
# 'useBoolean' or 'approxType', set the value of the parameter to a particular
# known flag (such as 1 for Boolean, 2 for Linear, and 3 for Hill) and 
# then write a conditional expression to handle the parameter (as in:
#   if(approxType==1, if(NucProt>=Kd,0,1), 0)
# which can automatically turn on the rule based on the parameters set.


begin parameters

    # Protein binding to DNA parameters for the different
    # approximations
    
    # First, the Kd of Protein binding to DNA, in numbers of molecules
    Kd 25
    
    # Next, the parameters needed for the linear function, with a slope
    # that matches the most sensitve part of the Hill function
    slope -0.0391
    b 1.4775  # the y-intercept
    minProt 12
    maxProt 38
    
    #Finally, the Hill coeffecient
    n           4

    
    # All other rates for reactions are given here

    kTranscription       10000
    kTranslation         0.1
  
    kExport  0.2
    kImport  0.1
    

    kDegRNAcyt   0.2
    kDegRNAnuc   10
  
    kDegProtCyt  0.1
    kDegProtNuc  8
    Km           10

end parameters




begin molecule types

    mRNA(loc~NUCLEUS~CYTOSOL)
    Prot(loc~NUCLEUS~CYTOSOL)
    DNA()
    Trash()

end molecule types




begin seed species

    # start with only the DNA
    DNA() 2
    
end seed species



begin observables

  Molecules  NucProt    Prot(loc~NUCLEUS)
  Molecules  CytProt    Prot(loc~CYTOSOL)
  Molecules  NucRNA     mRNA(loc~NUCLEUS)
  Molecules  CytRNA     mRNA(loc~CYTOSOL)
  
end observables



begin functions

   BooleanFunction() = if(NucProt>=Kd,0,1)
   LinearFunction() = if(NucProt<=minProt,1,if(NucProt>=maxProt,0,slope*NucProt+b))
   HillFunction() = (Kd^n)/(Kd^n+NucProt^n)

   DegFunction() = NucProt/(Km+NucProt)

end functions



begin reaction rules


  # Transcription rule, controlled by the repression approximations
  DNA() -> DNA() + mRNA(loc~NUCLEUS)    kTranscription*BooleanFunction()  TotalRate
  #DNA() -> DNA() + mRNA(loc~NUCLEUS)    kTranscription*LinearFunction()  TotalRate
  #DNA() -> DNA() + mRNA(loc~NUCLEUS)    kTranscription*HillFunction()    TotalRate
  
  # Nuclear export
  mRNA(loc~NUCLEUS) -> mRNA(loc~CYTOSOL)  kExport
  
  # Translation
  mRNA(loc~CYTOSOL) -> mRNA(loc~CYTOSOL) + Prot(loc~CYTOSOL)  kTranslation
  
  # Nuclear import
  Prot(loc~CYTOSOL) -> Prot(loc~NUCLEUS)  kImport
  
  
  # Degradation rules
  mRNA(loc~CYTOSOL) -> Trash()  kDegRNAcyt
  mRNA(loc~NUCLEUS) -> Trash()  kDegRNAnuc
  
  Prot(loc~CYTOSOL) -> Trash()  kDegProtCyt
  Prot(loc~NUCLEUS) -> Trash()  kDegProtNuc*DegFunction()  TotalRate
  

end reaction rules


#writeXML();
simulate_nf({suffix=>nf,t_end=>200,n_steps=>400});


